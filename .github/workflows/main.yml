# This is a basic workflow to help you get started with Actions

name: Pc/Desktop + Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, riolubfskin ]
  pull_request:
    branches: [ main, riolubfskin ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_NAME: VsDavePlusReformed
  REPO_PATH: matthewfro19191919/Dave-and-Bambi-Plus-Reformed-riolubfskins-Mobile

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get-commit-hash:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get_commit_hash.outputs.COMMIT_HASH }}
    steps:
      - name: Check Repository
        run: |
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "REPO_PATH: ${{ env.REPO_PATH }}"
          if [[ "$GITHUB_REPOSITORY" != "${{ env.REPO_PATH }}" ]]; then
            echo "Doesn't seem to be correct, returning SIGABRT..."
            exit 6
          else
            echo "Seems to be correct..."
          fi

      - name: Get latest commit hash
        id: get_commit_hash
        run: |
          commit_hash=${GITHUB_SHA::7}
          echo "Latest commit hash is $commit_hash"
          echo "::set-output name=COMMIT_HASH::$commit_hash"

  Desktop:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp.git
          haxelib git lime https://github.com/mcagabe19-stuff/lime
          haxelib install openfl 9.2.2
          haxelib install flixel 5.2.2
          haxelib install flixel-tools 1.5.1
          haxelib install flixel-ui 2.5.0
          haxelib install flixel-addons 2.10.0
          haxelib git faxe https://github.com/uhrobots/faxe
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit
          haxelib git polymod https://github.com/larsiusprime/polymod.git
          haxelib install hxcpp-debug-server
          haxelib install actuate
          haxelib install hxCodec 2.5.1
          haxelib install hscript
          haxelib git lime https://github.com/mcagabe19-stuff/lime
      - name: Compile (Windows)
        if: startsWith(matrix.os, 'windows')
        run: haxelib run lime build windows -D officialBuild

      - name: Upload Artifact (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\release\windows\bin\*
          if-no-files-found: error
  Releaser:
    needs: [get-commit-hash, Desktop]
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: Download Windows Build
        uses: actions/download-artifact@main
        with:
           name: windowsBuild
      - name: Publish The Release
        uses: softprops/action-gh-release@v2
        with:
          name: "${{ needs.get-commit-hash.outputs.commit_hash }}"
          tag_name: "${{ needs.get-commit-hash.outputs.commit_hash }}"
          prerelease: true
          files: |
            /.zip
